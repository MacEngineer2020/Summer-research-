clc
clear all
close all
format long
out = csvread('Data_1000points_sampled_every5.csv');%importing the data file
u= [out(:,1) out(:,2)]'; % matrix containing u1 and u2
xo = out(:,3)'; %matrix containing x1
time=out(:,4)'; % time stamps
net=0;
[row_u,col_u]=size(u); %getting size of dtatset
[row_xo,col_xo]=size(xo);


row_num=1;%keeps track of column index
weighted_in =[];%matrix to store 5 u1 and u2 values from orignal dataset
weighted_out=[];%stores corresponding value of x1

simulate=[];% stores the value of u1 and u2 to be used in sim function
column_num1=1;% keeping track of column index
sim_ans=[];% stores the simulated value of x1 generated by sim function
error=[];
error_valid=[];
% how many elements we want to look back on
index=1;
Mean_error=[];
sim_valid_ans=[];
%  for a=1:10
num_of_elements=10;
column_num1 = 1;
error=[];

for i=1:col_u-num_of_elements-1% outer loop
    row_num=1;
    for j=i:i+num_of_elements-1% inner loop
        %in this loop we generate our smaller datasets and feed them into
        %the rbe
        
        weighted_in(row_num,1)=u(1,j);
        row_num=row_num+1;
        weighted_in(row_num,1)=u(2,j);
        row_num=row_num+1;
        weighted_in(row_num,1)=xo(1,j);
        
        row_num=row_num+1;
    end
   
   
    weighted_out(1,1)=xo(1,i+num_of_elements);
    % feeding it into the rbe
    net=newrbe(weighted_in,weighted_out);
    
    % now we simulate the value of x1 in the timestep that is "next" and hasnt
    % been input into the net yet
    row_num=1;
    for k=i+1:i+num_of_elements
    simulate(row_num,1)=u(1,k);% getting the values of u1 and u2 at the "next" timestep
    row_num=row_num+1;
    simulate(row_num,1)=u(2,k);
    row_num=row_num+1;
    simulate(row_num,1)=xo(1,k);
    row_num=row_num+1;
    end
  
    sim_ans(1,column_num1) = sim(net,simulate);% storing the simulated value
    sim_ans(2,column_num1)=time(1,i+num_of_elements+1);% storing the corresponding timestep
    column_num1=column_num1+1;
    

end

plot( time,xo(1,:),'g',sim_ans(2,:),sim_ans(1,:),'b')
 legend("Actual data","simulation ")
 title('Actual data and simulation ')
 xlabel('Time')
 
 figure
 plot(sim_ans(2,:),sim_ans(1,:),'b')
